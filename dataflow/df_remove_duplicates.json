{
	"name": "df_remove_duplicates",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_sales_clean",
						"type": "DatasetReference"
					},
					"name": "dfRemoveDuplicates"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_sales_clean",
						"type": "DatasetReference"
					},
					"name": "VentesFinales"
				}
			],
			"transformations": [
				{
					"name": "aggregate1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          {Order Number} as string,",
				"          {Line Item} as string,",
				"          {Order Date} as string,",
				"          {Delivery Date} as string,",
				"          CustomerKey as string,",
				"          StoreKey as string,",
				"          ProductKey as string,",
				"          Quantity as string,",
				"          {Currency Code} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> dfRemoveDuplicates",
				"dfRemoveDuplicates aggregate(groupBy({Order Number},",
				"          {Line Item},",
				"          {Order Date},",
				"          {Delivery Date},",
				"          CustomerKey,",
				"          StoreKey,",
				"          ProductKey,",
				"          Quantity,",
				"          {Currency Code}),",
				"     {Order Number} = first(`Order Number`)) ~> aggregate1",
				"aggregate1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          {Order Number} as string,",
				"          {Line Item} as string,",
				"          {Order Date} as string,",
				"          {Delivery Date} as string,",
				"          CustomerKey as string,",
				"          StoreKey as string,",
				"          ProductKey as string,",
				"          Quantity as string,",
				"          {Currency Code} as string",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> VentesFinales"
			]
		}
	}
}