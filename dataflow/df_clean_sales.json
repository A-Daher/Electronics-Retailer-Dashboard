{
	"name": "df_clean_sales",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_sales",
						"type": "DatasetReference"
					},
					"name": "SourceSales"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          {Order Number} as integer,",
				"          {Line Item} as short,",
				"          {Order Date} as date,",
				"          {Delivery Date} as date,",
				"          CustomerKey as integer,",
				"          StoreKey as short,",
				"          ProductKey as short,",
				"          Quantity as short,",
				"          {Currency Code} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> SourceSales",
				"SourceSales derive({Line Item} = iif(isNull(toInteger(`Line Item`)), 1, toInteger(`Line Item`)),",
				"          CustomerKey = toInteger(iif(isNull(CustomerKey), -1, CustomerKey)),",
				"          StoreKey = toShort(iif(isNull(toInteger(StoreKey)), -1, toInteger(StoreKey))),",
				"          Quantity = toShort(iif(isNull(toInteger(Quantity)), 0, toInteger(Quantity))),",
				"          ProductKey = toShort(iif(isNull(toInteger(ProductKey)), -1, toInteger(ProductKey))),",
				"          {Delivery Date} = ERROR_FUNCTION('toDate($[__SINGLE_QUOTE__Order Date__SINGLE_QUOTE__], __SINGLE_QUOTE__MM/dd/yyyy__SINGLE_QUOTE__)'),",
				"          each(match(), ERROR_FUNCTION('') = ERROR_FUNCTION(''))) ~> derivedColumn1"
			]
		}
	}
}